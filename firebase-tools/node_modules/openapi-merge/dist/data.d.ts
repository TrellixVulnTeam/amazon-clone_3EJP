import { Swagger } from 'atlassian-openapi';
export declare type OperationSelection = {
    /**
     * Only Operatinos that have these tags will be taken from this OpenAPI file. If a single Operation contains
     * an includeTag and an excludeTag then it will be excluded; exclusion takes precedence.
     */
    includeTags?: string[];
    /**
     * Any Operation that has any one of these tags will be excluded from the final result. If a single Operation contains
     * an includeTag and an excludeTag then it will be excluded; exclusion takes precedence.
     */
    excludeTags?: string[];
};
export declare type SingleMergeInput = {
    oas: Swagger.SwaggerV3;
    disputePrefix?: string;
    pathModification?: PathModification;
    /**
     * Any Operation tagged with one of the paths in this definition will be excluded from the merge result. Any tag
     * mentioned in this list will also be excluded from the top level list of tags.
     */
    operationSelection?: OperationSelection;
};
export declare type PathModification = {
    stripStart?: string;
    prepend?: string;
};
export declare type MergeInput = Array<SingleMergeInput>;
export declare type SuccessfulMergeResult = {
    output: Swagger.SwaggerV3;
};
export declare type ErrorType = 'no-inputs' | 'duplicate-paths' | 'component-definition-conflict';
export declare type ErrorMergeResult = {
    type: ErrorType;
    message: string;
};
export declare function isErrorResult<A>(t: A | ErrorMergeResult): t is ErrorMergeResult;
export declare type MergeResult = SuccessfulMergeResult | ErrorMergeResult;
//# sourceMappingURL=data.d.ts.map